name: 👽️ Android CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  code_quality:
    name: 📈 Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: "17"

      - name: 🔧 Give execute permission to gradlew
        run: chmod +x gradlew

      - name: 🔍️ Run Lint
        run: |
          ./gradlew lintDebug --stacktrace 
          ./gradlew lintRelease --stacktrace

      - name: 🔍️ Run Detekt
        run: ./gradlew detekt --stacktrace

      - name: 🔍️ Run Ktlint
        run: ./gradlew ktlintCheck --stacktrace

      - name: 🗃️ Create reports archive
        run: |
          mkdir -p reports
          cp app/build/reports/lint-results-release.html reports/ 
          cp app/build/reports/detekt/*.md reports/ 
          cp app/build/reports/ktlint/*/*.html reports/ 

      - name: ⬆️ Upload Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: code-quality-reports
          path: reports/*

  build:
    name: 🚧 Build Project
    runs-on: ubuntu-latest
    needs: code_quality

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: "17"

      - name: 🔧 Give execute permission to gradlew
        run: chmod +x gradlew

      - name: 🏗️ Build the Project (APKs)
        run: ./gradlew assemble

      - name: ⬆️ Upload Debug APK
        if: github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: ⬆️ Upload Release APK
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk

  upload:
    name: ⬆️ Publish APKs
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔥 Upload Release APK to Firebase
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/app-release-unsigned.apk